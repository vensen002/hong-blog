import{_ as e,r as i,o as c,c as l,b as n,d as a,e as t,a as p}from"./app.ea6e98f4.js";const r="/images/vue/typescript/01/js缺陷演示.png",o={},d=n("h1",{id:"typescript-介绍",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#typescript-介绍","aria-hidden":"true"},"#"),a(" TypeScript 介绍")],-1),u={href:"https://www.tslang.cn/docs/home.html",target:"_blank",rel:"noopener noreferrer"},h={href:"https://gitee.com/jiuyueqi/class",target:"_blank",rel:"noopener noreferrer"},v=p(`<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><ul><li>TS是由微软2012年开发的一款开源的编程语言</li><li>TypeScript 是 Javascript 的超集，遵循最新的 ES6、ES5规范。TypeScript 扩展了 JavaScript的语法</li><li>在 js 的基础上，为js添加了<strong>类型支持</strong></li></ul><h2 id="设计目标" tabindex="-1"><a class="header-anchor" href="#设计目标" aria-hidden="true">#</a> 设计目标</h2><ul><li>遵循当前以及未来出现的ECMAScript规范</li><li>开发大型应用，可以编译成纯JavaScript，编译出来的JavaScript可以运行在浏览器上</li><li>成为跨平台的开发工具，TypeScript使用Apache作为开源协议，且能够再所有主流的操作系统上安装和执行</li></ul><h2 id="ts优势" tabindex="-1"><a class="header-anchor" href="#ts优势" aria-hidden="true">#</a> TS优势</h2><ul><li>更早的发现错误</li><li>任何位置都有代码提示，增加开发效率</li><li>类型系统提升了代码的可维护性，重构更容易</li><li>使用最新的ECMAScript语法</li><li>ts类型推断机制，降低成本</li></ul><h2 id="ts劣势" tabindex="-1"><a class="header-anchor" href="#ts劣势" aria-hidden="true">#</a> TS劣势</h2><ul><li>短期投入到工作可能增加开发成本</li><li>和有些库的结合不是很完美</li><li>学习需要成本，需要理解接口、泛型、类型等知识</li><li>集成到自动构建流程中需要额外的工作量</li></ul><h2 id="ts与js的区别" tabindex="-1"><a class="header-anchor" href="#ts与js的区别" aria-hidden="true">#</a> TS与JS的区别</h2><table><thead><tr><th>JavaScript</th><th>TypeScript</th></tr></thead><tbody><tr><td>动态语言</td><td>具有静态语言的特点</td></tr><tr><td>编译性语言运行时报错</td><td>编译期间报错</td></tr><tr><td>弱类型语言，没有类型</td><td>强类型语言，类似java, C++等，定义时指明类型</td></tr><tr><td>不支持模块、接口、泛型</td><td>支持模块、接口、泛型</td></tr><tr><td>基本数据类型和引用数据类型</td><td>更多的基本数据类型和引用数据类型，如any, never, enum等</td></tr><tr><td>在浏览器中直接执行</td><td>编译为js后才能在浏览器进行执行</td></tr></tbody></table><h2 id="ts环境安装与初体验" tabindex="-1"><a class="header-anchor" href="#ts环境安装与初体验" aria-hidden="true">#</a> TS环境安装与初体验</h2><h3 id="安装与运行" tabindex="-1"><a class="header-anchor" href="#安装与运行" aria-hidden="true">#</a> 安装与运行</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> typescript
或者
cnpm <span class="token function">install</span> <span class="token parameter variable">-g</span> typescript
或者
<span class="token function">yarn</span> global <span class="token function">add</span> typescript
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>tsc 文件名称<span class="token punctuation">.</span>ts
tsc <span class="token operator">--</span>watch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="js缺陷演示" tabindex="-1"><a class="header-anchor" href="#js缺陷演示" aria-hidden="true">#</a> js缺陷演示</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/* 
  1.没有对类型进行检测
  2.没有对是否传参进行检测
*/</span>
<span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token parameter">msg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;邱淑贞&quot;</span><span class="token punctuation">)</span> <span class="token comment">// 可以正常使用</span>
<span class="token function">test</span><span class="token punctuation">(</span><span class="token number">666</span><span class="token punctuation">)</span> <span class="token comment">// undefine</span>
<span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// error</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;往后余生,风雪是你, 平淡是你,敲每一行代码想的都是你。&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;你是CSS,我是DIV,就算我的布局再好,没了你也就没了色彩。&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+r+'" alt="js缺陷演示"></p>',17);function m(k,b){const s=i("ExternalLinkIcon");return c(),l("div",null,[d,n("p",null,[a("参考"),n("a",u,[a("官方文档"),t(s)]),n("a",h,[a("行业大佬整理文档以及源码"),t(s)])]),v])}const g=e(o,[["render",m],["__file","index.html.vue"]]);export{g as default};
