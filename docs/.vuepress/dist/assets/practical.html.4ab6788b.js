import{_ as a,o as n,c as s,a as e}from"./app.9f273a3c.js";const i="/images/linux/practical/ln.png",l="/images/linux/practical/date-d.png",t="/images/linux/practical/date.png",r="/images/linux/practical/nmap.png",d="/images/linux/practical/netstat.png",c="/images/linux/practical/ps-ef.png",o="/images/linux/practical/top1.png",p="/images/linux/practical/top2.png",u="/images/linux/practical/top3.png",v="/images/linux/practical/top45.png",m="/images/linux/practical/top6.png",b="/images/linux/practical/取值.png",g={},h=e(`<h1 id="实用操作" tabindex="-1"><a class="header-anchor" href="#实用操作" aria-hidden="true">#</a> 实用操作</h1><h2 id="systemctl-命令" tabindex="-1"><a class="header-anchor" href="#systemctl-命令" aria-hidden="true">#</a> systemctl 命令</h2><p>Linux 系统很多软件（内置或第三方）均支持使用<code>systemctl</code>命令控制：<strong>启动</strong>、<strong>停止</strong>、<strong>开机自启</strong>。<br> 能够被<code>systemctl</code>管理的软件，一般称之为：服务 <strong>语法</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>//        启动    关闭    状态    开启开机自启 关闭开机自启
systemctl start <span class="token operator">|</span> stop <span class="token operator">|</span> status <span class="token operator">|</span> <span class="token builtin class-name">enable</span> <span class="token operator">|</span> disable 服务名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>系统内置的服务：</p><ul><li>NetworkManager，主网络服务</li><li>network，副网络服务</li><li>firewalld，防火墙服务</li><li>sshd,ssh服务</li></ul><h2 id="ln-创建软链接" tabindex="-1"><a class="header-anchor" href="#ln-创建软链接" aria-hidden="true">#</a> ln (创建软链接)</h2><p>在系统中创建软链接，可以将文件、文件夹链接到其他位置。<br> 类似Windows系统中的<strong>快捷方式</strong><strong>语法</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ln</span> <span class="token parameter variable">-s</span> 参数1 参数2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>-s</code>：创建软链接</li><li>参数1：被链接的文件或文件夹</li><li>参数2：要链接去的目的地 <img src="`+i+`" alt="ln 软连接"></li></ul><h2 id="date-查看系统时间" tabindex="-1"><a class="header-anchor" href="#date-查看系统时间" aria-hidden="true">#</a> date (查看系统时间)</h2><p><strong>语法</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">date</span> <span class="token punctuation">[</span>-d<span class="token punctuation">]</span> <span class="token punctuation">[</span>+格式化字符串<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>-d</code>：按照给定的字符串显示日期，一般用于日期计算 <ul><li>year 年</li><li>month 月</li><li>day 天</li><li>hour 小时</li><li>minute 分</li><li>second 秒 <img src="`+l+'" alt="date-d"></li></ul></li><li>格式化字符串：通过特定的字符串标记，来控制现实的日期格式 <ul><li><code>%Y</code>：年</li><li><code>%y</code>：年份后两位（00~99）</li><li><code>%m</code>：月份（01~12）</li><li><code>%d</code>：日（01~31）</li><li><code>%H</code>：小时（00~23）</li><li><code>%M</code>：分钟（00~59）</li><li><code>%S</code>：秒（00~59）</li><li><code>%s</code>：自 1970-01-01 00:00:00 UTC 到现在的秒数 <img src="'+t+`" alt="date"></li></ul></li></ul><p><strong>修改时区</strong> root权限下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">rm</span> <span class="token parameter variable">-f</span> /etc/localtime
<span class="token function">sudo</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>ntp 程序</strong> 通过<code>ntp</code>程序自动校准系统时间</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// 安装
yum <span class="token parameter variable">-y</span> <span class="token function">install</span> ntp
// 启动并设置开机自启
systemctl start ntpd
systemctl <span class="token builtin class-name">enable</span> ntpd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// 也可以手动校准时间 需要root权限
ntpdate <span class="token parameter variable">-u</span> ntp.aliyun.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ip-地址和主机名" tabindex="-1"><a class="header-anchor" href="#ip-地址和主机名" aria-hidden="true">#</a> IP 地址和主机名</h2><p>IP地址是联网计算机的网络地址，用于在网络中进行定位<br> 格式: <code>a.b.c.d</code>，其中abcd是0~255的数字</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// 通过下面命令，查看IP地址相关信息
<span class="token function">ifconfig</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>如果 <code>ifconfig</code> 无法使用，那么需要安装 <code>net-tools</code> 包<br><strong>特殊IP地址</strong></li><li><code>127.0.0.1</code>：代指本机</li><li><code>0.0.0.0</code>： <ul><li>可以用于指代本机</li><li>可以在端口绑定中用来确定绑定关系</li><li>在一些IP地址限制中，表示所有IP，如放行规则设置为<code>0.0.0.0</code>，表示允许任意IP访问 <strong>主机名</strong> 主机名就是主机的名称，用于标识一个计算机</li></ul></li><li><code>hostname</code>：查看主机名</li><li><code>hostnamectl set-hostname 主机名</code>：修改主机名（需要<span style="color:red;"><strong>root</strong></span>权限）</li></ul><p><strong>域名解析</strong><br> 可以通过主机名找到对应计算机的IP地址，这就是主机名映射（域名解析）<br> 先通过系统本地的记录去查找，如果找不到就联网去公开DNS服务器去查找</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>访问                检查本地hosts
www.baidu.com   --&gt; Windows / Linux                       有
                    下是否有baidu.com的IP地址记录 --&gt; 判断 --&gt; 打开网站
                                                      | 无       ^
                                                      V          | 有
                                            联网询问公开DSN
                                            服务器是否有记录 --&gt; 判断
                                                                 | 无
                                                                 v
                                                             网站不存在
                                                                404
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>先查看自己本机的记录（私人地址本） <ul><li><code>Windows</code>：C:\\Windows\\System32\\drivers\\etc\\hosts</li><li><code>Linux</code>：/etc/hosts</li></ul></li><li>再去联网DNS服务器（144.144.144.144 8.8.8.8 等公开的DNS服务器）</li></ol><h2 id="ping-wget-curl" tabindex="-1"><a class="header-anchor" href="#ping-wget-curl" aria-hidden="true">#</a> ping wget curl</h2><p><strong>ping</strong>检查指定的网络服务器是否是可联通状态</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ping</span> <span class="token punctuation">[</span>-c num<span class="token punctuation">]</span> ip或主机名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>-c</code>：检查次数，不使用将无限次持续检查</li></ul><p><strong>wget</strong>非交互式的文件下载器，可以在命令行内下载网络文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> <span class="token punctuation">[</span>-b<span class="token punctuation">]</span> url
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>-b</code>：后台下载，会将日志写入到当前工作目录的<code>wget-log</code>文件</li><li><code>url</code>：下载链接</li></ul><p><strong>curl</strong>发送<strong>http</strong>网络请求，可用于：下载文件、获取信息等</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token punctuation">[</span>-O<span class="token punctuation">]</span> url
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>-O</code>：大写O，用于下载文件，当<code>url</code>是下载链接时，可以使用此选项保存文件</li></ul><h2 id="端口" tabindex="-1"><a class="header-anchor" href="#端口" aria-hidden="true">#</a> 端口</h2><h3 id="端口定义" tabindex="-1"><a class="header-anchor" href="#端口定义" aria-hidden="true">#</a> 端口定义</h3><p>端口：是设备与外界通讯交流的出入口；可以分为<strong>物理端口</strong>和<strong>虚拟端口</strong>两类<br><strong>物理端口</strong>：又可称之为接口，是可见的端口。如USB接口等。<br><strong>虚拟端口</strong>：是计算机内部的端口，不可见的，是用来操作系统和外部进行交互使用的。</p><h3 id="端口划分" tabindex="-1"><a class="header-anchor" href="#端口划分" aria-hidden="true">#</a> 端口划分</h3><p>Linux 系统可以支持 65535 个端口，被分为3类进行使用：</p><ul><li><strong>公认端口</strong>：1~1023，通常用于一些系统内置或知名程序的预留使用，非特殊需要，不要占用。比如SSH服务的22端口。</li><li><strong>注册端口</strong>：1024~49151，通常可以随意使用，用于松散的绑定一些程序/服务</li><li><strong>动态端口</strong>：49152~65535，通常不会固定绑定程序，而是当程序对外进行网络连接时，用于临时使用。</li></ul><h3 id="查看端口" tabindex="-1"><a class="header-anchor" href="#查看端口" aria-hidden="true">#</a> 查看端口</h3><ul><li>使用<code>nmap</code>命令查看端口</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// 没有该命令的话，可以安装
yum <span class="token parameter variable">-y</span> <span class="token function">install</span> nmap
// 使用
nmap ip或主机名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+r+`" alt="nmap"></p><ul><li>使用<code>netstat</code>命令，查看<strong>指定端口</strong>的占用情况</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// 无法使用，就安装net-tools工具
yum <span class="token parameter variable">-y</span> <span class="token function">install</span> net-tools
// 语法
<span class="token function">netstat</span> <span class="token parameter variable">-anp</span> <span class="token operator">|</span> <span class="token function">grep</span> 端口号
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+d+`" alt="netstat"></p><h2 id="进程管理" tabindex="-1"><a class="header-anchor" href="#进程管理" aria-hidden="true">#</a> 进程管理</h2><h3 id="什么是进程" tabindex="-1"><a class="header-anchor" href="#什么是进程" aria-hidden="true">#</a> 什么是进程</h3><ul><li>是指一个程序在操作系统内运行后，就被操作系统注册为系统内的一个进程</li><li>并且拥有独立的进程ID编号</li></ul><h3 id="查看进程" tabindex="-1"><a class="header-anchor" href="#查看进程" aria-hidden="true">#</a> 查看进程</h3><ul><li>通过<code>ps</code>命令查看<strong>Linux</strong>系统中的进程信息</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ps</span>  <span class="token punctuation">[</span>-e -f<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>-e</code>：显示出全部进程</li><li><code>-f</code>：以完全格式化的形式展示信息（全部信息）</li><li>使用 <code>ps -ef</code>就可以列出全部进程的全部信息 <img src="`+c+`" alt="ps-ef"><ul><li><code>UID</code>：进程所属的用户ID</li><li><code>PID</code>：进程ID</li><li><code>PPID</code>：进程的父进程ID</li><li><code>C</code>：此进程的CPU占用率（百分比）</li><li><code>STIME</code>：进程的启动时间</li><li><code>TTY</code>：启动此进程的终端序号，如显示？，表示非终端启动</li><li><code>TIME</code>：进程占用CPU的时间</li><li><code>CMD</code>：进程对应的名称或启动路径或启动命令</li></ul></li></ul><h3 id="关闭进程" tabindex="-1"><a class="header-anchor" href="#关闭进程" aria-hidden="true">#</a> 关闭进程</h3><p>通过<code>kill</code>命令关闭进程</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">kill</span> <span class="token punctuation">[</span>-9<span class="token punctuation">]</span> 进程ID
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>-9</code>：表示强制关闭进程</li><li>不使用选项<code>-9</code>会向进程发送信号要求其关闭，但是否关闭需要看进程的自身处理机制</li></ul><h2 id="主机状态" tabindex="-1"><a class="header-anchor" href="#主机状态" aria-hidden="true">#</a> 主机状态</h2><ul><li>可以通过<code>top</code>命令查看CPU、内存使用情况，类似Windows的任务管理器</li><li>默认<span style="color:red;">每5秒刷新</span>一次，语法：直接输入<code>top</code>即可，按<code>q</code>或<code>ctrl+c</code>退出</li></ul><h3 id="top命令内容详解" tabindex="-1"><a class="header-anchor" href="#top命令内容详解" aria-hidden="true">#</a> top命令内容详解</h3><ul><li><strong>第一行</strong>：<img src="`+o+'" alt="top1"><br> top：命令名称， 01:04:45：当前系统时间，up 9 days：系统运行时间，2 users：2个用户登录，load：1、5、15分钟的负载</li><li><strong>第二行</strong>：<img src="'+p+'" alt="top2"> Task：116个进程，1 running：1个进程在运行，115 sleeping：115个进程在睡眠，0 stopped：0个停止，0 zombie：0个僵尸进程</li><li><strong>第三行</strong>：<img src="'+u+'" alt="top3"> %Cpu(s)：CPU使用率，<strong>us：用户CPU使用率</strong>，<strong>sy：系统CPU使用率</strong>，<br> ni：高优先级进程占用CPU时间百分比，id：空闲CPU率，wa：IO等待CPU占用率，hi：CPU硬件中断率，si：CPU软件中断率，st：强制等待占用CPU率</li><li><strong>第四、五行</strong>：<img src="'+v+'" alt="top45"> MiB Mem：物理内存，total：总量，<strong>free：空闲</strong>，<strong>used：使用</strong>，buff/cache：buff和cache占用<br> MiB Swap：虚拟内存（交换空间）</li><li><strong>其他</strong><img src="'+m+`" alt="top6"><ul><li><strong>PID：进程id</strong></li><li>USER：进程所属用户</li><li>PR：进程优先级</li><li>NI：负值表示高优先级，正表示低优先级</li><li>VIRT：进程使用虚拟内存</li><li><strong>RES：进程使用物理内存</strong></li><li>SHR：进程使用共享内存</li><li>S：进程状态（S：休眠，R：运行，Z：僵尸，N：负数优先级，I：空闲状态）</li><li><strong>%CPU：进程占用CPU率</strong></li><li><strong>%MEM：进程占用内存率</strong></li><li>TIME+：进程使用CPU时间总计，单位10毫秒</li><li>COMMAND：进程的命令或名称或程序文件路径</li></ul></li></ul><h3 id="top选项" tabindex="-1"><a class="header-anchor" href="#top选项" aria-hidden="true">#</a> top选项</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>//  选项  功能
    <span class="token parameter variable">-p</span>    只显示某个进程的信息
    <span class="token parameter variable">-d</span>    设置刷新时间，默认5s
    <span class="token parameter variable">-c</span>    显示产生进程的完整指令，默认进程名
    <span class="token parameter variable">-n</span>    指定刷新次数
    <span class="token parameter variable">-b</span>    以非交互非全屏模式运行；以批次的方式执行top，一般配合-n指定输出几次统计信息，将输出重定向到指定文件；比如：top <span class="token parameter variable">-bn</span> <span class="token number">3</span> <span class="token operator">&gt;</span> /tmp/top.tmp
    <span class="token parameter variable">-i</span>    不显示任何闲置<span class="token punctuation">(</span>idle<span class="token punctuation">)</span>或无用<span class="token punctuation">(</span>zombie<span class="token punctuation">)</span>的进程
    <span class="token parameter variable">-u</span>    查找特定用户启动的进程
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="top交互式选项" tabindex="-1"><a class="header-anchor" href="#top交互式选项" aria-hidden="true">#</a> top交互式选项</h3><ul><li><strong>h键</strong>：显示帮助页面</li><li><strong>c键</strong>：显示产生进程的完成命令</li><li><strong>f键</strong>：选择需要展示的项目</li><li><strong>M键</strong>：根据驻留内存大小（RES）排序</li><li><strong>P键</strong>：根据CPU使用百分比大小进行排序</li><li><strong>T键</strong>：根据时间/累计时间进行排序</li><li><strong>E键</strong>：切换顶部内存显示单位</li><li><strong>e键</strong>：切换进程内存显示单位</li><li><strong>l键</strong>：切换显示平均负载和启动时间信息</li><li><strong>i键</strong>：不显示闲置或无用的进程</li><li><strong>t键</strong>：切换显示CPU状态信息</li><li><strong>m键</strong>：切换显示内存信息</li></ul><h3 id="磁盘信息监控" tabindex="-1"><a class="header-anchor" href="#磁盘信息监控" aria-hidden="true">#</a> 磁盘信息监控</h3><ul><li>使用df命令，可以查看硬盘的使用情况</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// <span class="token parameter variable">-h</span> 使用便捷单位显示
<span class="token function">df</span> <span class="token punctuation">[</span>-h<span class="token punctuation">]</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用iostat查看CPU、磁盘的相关信息</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>iostat <span class="token punctuation">[</span>-x<span class="token punctuation">]</span> <span class="token punctuation">[</span>num1<span class="token punctuation">]</span> <span class="token punctuation">[</span>num2<span class="token punctuation">]</span>
// <span class="token parameter variable">-x</span> 显示更多信息
// num1：刷新间隔，num2：刷新几次
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>tps：该设备每秒传输次数</li></ul><h3 id="网络状态监控" tabindex="-1"><a class="header-anchor" href="#网络状态监控" aria-hidden="true">#</a> 网络状态监控</h3><ul><li>可以使用sar命令查看网络相关统计信息</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// 固定使用就行
sar <span class="token parameter variable">-n</span> DEV num1 num2
// <span class="token parameter variable">-n</span>   查看网络
// DEV  查看网络接口
// num1：刷新间隔（不填就查看一次）
// num2：查看次数（不填无限次数）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="环境变量" tabindex="-1"><a class="header-anchor" href="#环境变量" aria-hidden="true">#</a> 环境变量</h2><p><strong>定义</strong><br> 环境变量是一组信息记录，类型是Key Value，用于操作系统运行的时候记录关键信息。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// 使用<span class="token variable"><span class="token variable">\`</span><span class="token function">env</span><span class="token variable">\`</span></span>命令可以查看当前系统的环境变量。
<span class="token function">env</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>$符号</strong><br> 在Linux系统中，<code>$</code>符号被用于取“变量”的值。<br> 取环境变量的值就可以通过语法：<code>$环境变量名</code> 来取值</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// 取 <span class="token environment constant">PATH</span> 环境变量
<span class="token builtin class-name">echo</span> <span class="token environment constant">$PATH</span>
// 取值在拼接
<span class="token builtin class-name">echo</span> <span class="token variable">\${<span class="token environment constant">PATH</span>}</span>ABC
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+b+`" alt="$取值"></p><p><strong>自定义环境变量</strong></p><ul><li>临时生效：export 变量名=变量值</li><li>永久生效： <ul><li>当前用户生效，配置在当前用户的：<strong>~/.bashrc</strong></li><li>全局用户生效，配置在系统的：<strong>/etc/profile</strong></li><li>通过语法：<code>source 配置文件</code>，进行立即生效，或<strong>重新登录</strong>生效</li></ul></li></ul><h2 id="压缩、解压" tabindex="-1"><a class="header-anchor" href="#压缩、解压" aria-hidden="true">#</a> 压缩、解压</h2><h3 id="tar命令" tabindex="-1"><a class="header-anchor" href="#tar命令" aria-hidden="true">#</a> tar命令</h3><p>Linux和Mac系统常用有2种压缩格式，后缀名分别是：</p><ul><li><code>.tar</code>：tarball，归档文件，即简单的将文件封装到一个<code>.tar</code>的文件中，体积没有太多的减少</li><li><code>.gz</code>：也常见为<code>.tar.gz</code>，gzip格式压缩文件，使用gzip压缩算法将文件压缩到一个文件内，可以极大的减少压缩后的体积</li></ul><p><strong>语法</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token punctuation">[</span>-c <span class="token parameter variable">-v</span> <span class="token parameter variable">-x</span> <span class="token parameter variable">-f</span> <span class="token parameter variable">-z</span> -C<span class="token punctuation">]</span> 目的文件 目标文件1<span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>-c</code>：创建压缩文件，用于压缩模式</li><li><code>-v</code>：显示压缩、解压过程，用于查看进度</li><li><code>-x</code>：解压文件</li><li><code>-f</code>：要创建的文件，或解压的文件；<code>-f</code>必选且位置必须处于最后一个</li><li><code>-C</code>：选择解压的目的地，用于解压模式</li></ul><p><strong>常用组合</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// 压缩
// 将 <span class="token number">1</span>.txt <span class="token number">2</span>.txt <span class="token number">3</span>.txt 打包压缩到 test.tar 文件中
<span class="token function">tar</span> <span class="token parameter variable">-cvf</span> test.tar <span class="token number">1</span>.txt <span class="token number">2</span>.txt <span class="token number">3</span>.txt
// 将 <span class="token number">1</span>.txt <span class="token number">2</span>.txt <span class="token number">3</span>.txt 使用 <span class="token function">gzip</span> 算法压缩到 test.tar.gz 文件中
<span class="token function">tar</span> <span class="token parameter variable">-zcvf</span> test.tar.gz <span class="token number">1</span>.txt <span class="token number">2</span>.txt <span class="token number">3</span>.txt

// 解压
// 解压 test.tar 至当前目录
<span class="token function">tar</span> <span class="token parameter variable">-xvf</span> test.tar
// 解压 test.tar 至指定目录<span class="token punctuation">(</span>/home/test<span class="token punctuation">)</span>
<span class="token function">tar</span> <span class="token parameter variable">-xvf</span> test.tar <span class="token parameter variable">-C</span> /home/test
// 解压 <span class="token function">gzip</span> 算法的文件
<span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> test.tar.gz <span class="token parameter variable">-C</span> /home/test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>f</code>必须要发到最后</li></ul><h3 id="zip命令" tabindex="-1"><a class="header-anchor" href="#zip命令" aria-hidden="true">#</a> zip命令</h3><p>使用<code>zip</code>打包压缩，使用<code>unzip</code>解压</p><p><strong>zip语法</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">zip</span> <span class="token punctuation">[</span>-r<span class="token punctuation">]</span> 目的文件 目标文件1<span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>-r</code>：被压缩的内容有文件夹，必须使用<code>-r</code>选项</li></ul><p><strong>unzip语法</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">unzip</span> <span class="token punctuation">[</span>-d<span class="token punctuation">]</span> 目的路径
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>-d</code>：指定要解压去的位置</li></ul><p><strong>示例</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// 压缩
<span class="token function">zip</span> test.zip <span class="token number">1</span>.txt <span class="token number">2</span>.txt <span class="token number">3</span>.txt
<span class="token function">zip</span> <span class="token parameter variable">-r</span> test.zip <span class="token number">1</span>.txt <span class="token number">2</span>.txt test1 test2

// 解压
<span class="token function">unzip</span> test.zip
<span class="token function">unzip</span> test.zip <span class="token parameter variable">-d</span> /home/test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,105),k=[h];function x(f,_){return n(),s("div",null,k)}const z=a(g,[["render",x],["__file","practical.html.vue"]]);export{z as default};
