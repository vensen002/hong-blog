import{_ as e,o as d,c as a,a as r}from"./app.cebfa1e5.js";const n="/images/linux/sys-contents/根目录文件.png",i={},s=r(`<h1 id="linux-系统目录结构" tabindex="-1"><a class="header-anchor" href="#linux-系统目录结构" aria-hidden="true">#</a> Linux 系统目录结构</h1><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ls</span> /
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+n+`" alt="根目录文件"></p><h2 id="树状目录结构" tabindex="-1"><a class="header-anchor" href="#树状目录结构" aria-hidden="true">#</a> 树状目录结构</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/
├─ bin        &lt;--- 重要
├─ boot
├─ dev
├─ etc        &lt;--- 存放所有的系统管理所需要的配置文件和子目录,不要修改内部的文件，可能会导致系统不能启动
├─ home
├─ lib
├─ lost+found
├─ media
├─ mnt
├─ opt
├─ proc
├─ root
├─ sbin       &lt;--- 重要
├─ selinux
├─ srv
├─ sys
├─ tmp
├─ usr        &lt;--- usr 是 unix shared resources(共享资源)的缩写，非常重要。用户的很多应用程序和文件都放在这个目录下
│  ├─ bin       &lt;--- 系统用户使用的应用程序
│  ├─ sbin      &lt;--- 超级用户使用的比较高级的管理程序和系统守护程序
│  └─ src       &lt;--- 内核源代码默认的放置目录
├─ var        &lt;--- variable(变量)的缩写，存放着在不断扩充着的东西，经常被修改的目录放在这个目录下。包括各种日志文件。
└─ run
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="bin" tabindex="-1"><a class="header-anchor" href="#bin" aria-hidden="true">#</a> <code>/bin</code></h2><p><code>bin</code>是<code>Binaries</code>(二进制文件)的缩写，存放最常使用的<strong>命令</strong>。</p><h2 id="boot" tabindex="-1"><a class="header-anchor" href="#boot" aria-hidden="true">#</a> <code>/boot</code></h2><p>存放启动<code>Linux</code>的核心文件，包括连接文件以及镜像文件。</p><h2 id="dev" tabindex="-1"><a class="header-anchor" href="#dev" aria-hidden="true">#</a> <code>/dev</code></h2><p><code>dev</code>是<code>Device</code>(设备)的缩写,存放<code>Linux</code>的外部设备，<code>Linux</code>中<strong>访问设备</strong>和<strong>访问文件</strong>的方式是相同的。</p><h2 id="etc" tabindex="-1"><a class="header-anchor" href="#etc" aria-hidden="true">#</a> <code>/etc</code></h2><p><code>etc</code>是<code>Etcetera</code>(等等)的缩写,存放所有系统管理所需要的<strong>配置文件</strong>和<strong>子目录</strong>，更改目录下的文件可能会导致系统不能启动。</p><h2 id="home" tabindex="-1"><a class="header-anchor" href="#home" aria-hidden="true">#</a> <code>/home</code></h2><p>用户的主目录，以用户的账号命名。</p><h2 id="lib" tabindex="-1"><a class="header-anchor" href="#lib" aria-hidden="true">#</a> <code>/lib</code></h2><p><code>lib</code>是<code>Library</code>(库)的缩写,存放基本代码库（比如c++库），其作用类似于Windows里的DLL文件。几乎所有的应用程序都需要用到这些共享库。</p><h2 id="lost-found" tabindex="-1"><a class="header-anchor" href="#lost-found" aria-hidden="true">#</a> <code>/lost+found</code></h2><p>一般情况下是空的，当系统非法关机后，这里就存放了一些文件。</p><h2 id="media" tabindex="-1"><a class="header-anchor" href="#media" aria-hidden="true">#</a> <code>/media</code></h2><p>类windows的其他设备，例如U盘、光驱等等，识别后linux会把设备挂载到这个目录下。</p><h2 id="mnt" tabindex="-1"><a class="header-anchor" href="#mnt" aria-hidden="true">#</a> <code>/mnt</code></h2><p>临时挂载别的文件系统的，我们可以将光驱挂载在<code>/mnt/</code>上，然后进入该目录就可以查看光驱里的内容了。</p><h2 id="opt" tabindex="-1"><a class="header-anchor" href="#opt" aria-hidden="true">#</a> <code>/opt</code></h2><p><code>opt</code>是<code>optional</code>(可选)的缩写，默认是空的，我们安装额外软件就放在这个目录里。</p><h2 id="proc" tabindex="-1"><a class="header-anchor" href="#proc" aria-hidden="true">#</a> <code>/proc</code></h2><p><code>proc</code>是<code>Processes</code>(进程)的缩写。<br><strong>伪文件系统</strong>（也即虚拟文件系统），是系统内存的映射，存储的是当前内核运行状态的特殊文件。<br> 我们可以通过直接访问这个目录来获取系统信息。<br> 也可以修改里面的某些文件来操作系统内核。</p><h2 id="root" tabindex="-1"><a class="header-anchor" href="#root" aria-hidden="true">#</a> <code>/root</code></h2><p>系统管理员，即超级权限者的用户主目录。</p><h2 id="sbin" tabindex="-1"><a class="header-anchor" href="#sbin" aria-hidden="true">#</a> <code>/sbin</code></h2><p><code>s</code>就是<code>Super User</code>的意思，是<code>Superuser Binaries</code>(超级用户的二进制文件) 的缩写。<br> 存放系统管理员使用的系统管理程序。</p><h2 id="selinux" tabindex="-1"><a class="header-anchor" href="#selinux" aria-hidden="true">#</a> <code>/selinux</code></h2><p><code>Redhat/CentOS</code>所特有的目录，<code>Selinux</code>是一个安全机制，存放selinux相关的文件的。<br> 类似于<code>windows</code>的防火墙，但是这套机制比较复杂。</p><h2 id="srv" tabindex="-1"><a class="header-anchor" href="#srv" aria-hidden="true">#</a> <code>/srv</code></h2><p>存放服务启动之后需要提取的数据（不用服务器就是空）。</p><h2 id="sys" tabindex="-1"><a class="header-anchor" href="#sys" aria-hidden="true">#</a> <code>/sys</code></h2><p>这是<code>linux2.6</code>内核的一个很大的变化。该目录下安装了2.6内核中新出现的一个文件系统<code>sysfs</code>。<br><code>sysfs</code>文件系统集成了下面3种文件系统的信息：针对进程信息的<strong>proc文件系统</strong>、针对设备的<strong>devfs文件系统</strong>以及针对伪终端的<strong>devpts文件系统</strong>。<br> 该文件系统是内核设备树的一个直观反映。<br> 当一个内核对象被创建的时候，对应的文件和目录也在内核对象子系统中被创建。</p><h2 id="tmp" tabindex="-1"><a class="header-anchor" href="#tmp" aria-hidden="true">#</a> <code>/tmp</code></h2><p>tmp 是 temporary(临时) 的缩写,存放一些临时文件的。</p><h2 id="usr" tabindex="-1"><a class="header-anchor" href="#usr" aria-hidden="true">#</a> <code>/usr</code></h2><p><code>usr</code>是<code>unix shared resources</code>(共享资源)的缩写，非常重要的目录。<br> 用户的很多应用程序和文件都放在这个目录下，类似于<code>windows</code>下的<code>program files</code>目录。</p><h2 id="usr-bin" tabindex="-1"><a class="header-anchor" href="#usr-bin" aria-hidden="true">#</a> <code>/usr/bin</code></h2><p>系统用户使用的应用程序和指令。</p><h2 id="usr-sbin" tabindex="-1"><a class="header-anchor" href="#usr-sbin" aria-hidden="true">#</a> <code>/usr/sbin</code></h2><p>超级用户使用的比较高级的管理程序和系统守护程序。</p><h2 id="usr-src" tabindex="-1"><a class="header-anchor" href="#usr-src" aria-hidden="true">#</a> <code>/usr/src</code></h2><p>内核源代码默认的放置目录。</p><h2 id="var" tabindex="-1"><a class="header-anchor" href="#var" aria-hidden="true">#</a> <code>/var</code></h2><p><code>var</code>是<code>variable</code>(变量)的缩写。<br> 存放经常修改的数据，比如程序运行的日志文件（/var/log 目录下）。</p><h2 id="run" tabindex="-1"><a class="header-anchor" href="#run" aria-hidden="true">#</a> <code>/run</code></h2><p>临时文件系统，存储系统启动以来的信息。<br> 当系统重启时，这个目录下的文件应该被删掉或清除。<br> 如果你的系统上有 /var/run 目录，应该让它指向 run。</p>`,51),c=[s];function o(h,t){return d(),a("div",null,c)}const u=e(i,[["render",o],["__file","sys-contents.html.vue"]]);export{u as default};
